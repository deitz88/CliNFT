{"version":3,"sources":["utils/tokenService.js","utils/userService.js","components/ErrorMessage/ErrorMessage.jsx","pages/SignupPage/SignupPage.jsx","components/MOLECULES/HeaderImage.jsx","pages/LoginPage/LoginPage.jsx","components/Navbar/Dropdown/Dropdown.jsx","components/MOLECULES/WelcomeHeader.jsx","components/Wallet/Wallet.jsx","components/Navbar/Navbar.jsx","components/SuccessMessage/SuccessMessage.jsx","utils/clientService.js","utils/trialsService.js","Solidity/constants.js","Solidity/helpers/Transactors.js","pages/AddClient/AddClient.jsx","pages/AddTrial/AddTrial.jsx","components/MOLECULES/SendEthButton/SendEthButton.jsx","components/Find/Trials/TrialsFind.jsx","pages/Find/Find.jsx","pages/Home/Home.jsx","pages/App/App.jsx","serviceWorker.js","index.js"],"names":["getToken","token","localStorage","getItem","JSON","parse","window","atob","split","exp","Date","now","removeItem","setToken","setItem","removeToken","getUserFromToken","user","BASE_URL","signup","fetch","method","body","stringify","headers","then","res","ok","json","status","Error","tokenService","logout","login","creds","Headers","getUser","ErrorMessage","props","className","error","SignUpPage","console","log","handleSignUpOrLogin","history","useHistory","useState","setError","employeeId","password","confirmPassword","email","accessToken","formInput","setFormInput","handleInput","e","target","name","value","handleValidation","formIsValid","validator","isNumeric","lastAtPos","lastIndexOf","lastDotPos","indexOf","length","isStrongPassword","minLength","minLowercase","minUppercase","minNumbers","minSymbols","returnScore","pointsPerUnique","pointsPerRepeat","pointsForContainingLower","pointsForContainingUpper","pointsForContainingNumber","pointsForContainingSymbol","equals","a","preventDefault","userService","push","message","useEffect","timer","setTimeout","clearTimeout","Grid","textAlign","style","margin","verticalAlign","Column","maxWidth","Header","as","color","to","Icon","id","Form","autoComplete","onSubmit","Input","placeholder","onChange","required","type","fontSize","Button","HeaderImage","src","alt","width","LoginPage","Dropdown","setShow","handleLogout","closeDropdown","handleClickOutside","onClick","clickOutsideConfig","onClickOutside","Wallet","wallet","connect","ethereum","requestPermissions","data","height","position","left","padding","top","backgroundColor","Navbar","show","location","useLocation","hover","setHover","handleHover","onMouseOver","onMouseOut","size","pathname","SuccessMessage","success","Authorization","addClient","mintToken","checkPayment","transferFunds","addTrial","getTrials","findClients","INFURA_ID","BLOCKNATIVE_DAPPID","hostname","Transactor","provider","gasPrice","signer","network","etherscan","tx","txSigner","options","dappId","system","networkId","txNetwork","chainId","transactionHandler","txInformation","notify","Notify","etherscanNetwork","etherscanTxUrl","Promise","result","parseUnits","gasLimit","hexlify","sendTransaction","hash","emitter","on","transaction","onclick","open","notification","info","description","placement","AddClient","setStatus","getNetworkStatus","setGetNetworkStatus","ethers","providers","Web3Provider","getSigner","getNetwork","getNetworkAddy","contract","Contract","imageLocal","blob","mintNFT","ownerAddress","client","NFTStorage","trialIdentification","percentageParticipated","File","image","store","metadata","getGasPrice","_hex","metadataURI","url","replace","walletAddress","transactor","wait","receipt","tokenId","events","event","args","toString","clientService","setSuccess","msg","trials","setTrials","loading","setLoading","setName","utils","getAddress","argument","code","trialsService","Loader","active","marginBottom","marginRight","borderRadius","Checkbox","Field","disabled","Select","map","trial","key","_id","text","Slider","defaultValue","step","marks","min","max","valueLabelDisplay","visibility","AddTrial","SendEthButton","amount","setDisabled","newGasPrice","setNewGasPrice","senderAddress","setSenderAddress","nonce","checkPaymentStatus","paid","sendEth","from","parseEther","alert","request","marginTop","TrialsFind","showEth","setShowEth","errorEth","setErrorEth","payment","setPayment","perClient","setPerClient","ethInput","input","setInput","compile","setCompile","currentTrial","setCurrentTrial","clients","setClients","toggle","percentByTrial","i","percentageCompleted","getTotals","total","clientPayload","sumPercent","forEach","right","Table","unstackable","celled","compact","Row","HeaderCell","Body","Cell","toFixed","Footer","Find","Segment","border","Home","App","currentWallet","setCurrentWallet","currentAccount","handleAccountsChanged","accounts","catch","err","setUser","exact","path","Boolean","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c71be02a.chunk.js","sourcesContent":["function setToken(token) {\n  if (token) {\n    // localStorage is given to us by the browser\n    localStorage.setItem('token', token);\n  } else {\n    localStorage.removeItem('token');\n  }\n}\n\nfunction getToken() {\n  let token = localStorage.getItem('token');\n  if (token) {\n    // Check if expired, remove if it is\n    // atob is a function that decodes a base-64 string\n    const payload = JSON.parse(window.atob(token.split('.')[1]));\n    // JWT's exp is expressed in seconds, not milliseconds, so convert\n    if (payload.exp < Date.now() / 1000) {\n      localStorage.removeItem('token');\n      token = null;\n    }\n  }\n  return token;\n}\n\nfunction getUserFromToken() {\n  const token = getToken();\n  return token ? JSON.parse(atob(token.split('.')[1])).user : null;\n}\n\nfunction removeToken() {\n  localStorage.removeItem('token');\n}\n\nexport default {\n  setToken,\n  getToken,\n  removeToken,\n  getUserFromToken\n};","import tokenService from './tokenService';\n\nconst BASE_URL = '/api/users/';\n\nfunction signup(user) {\n  return fetch(BASE_URL + \"signup\", {\n    method: \"POST\",\n    body: JSON.stringify(user),\n    headers: { \"Content-type\": \"application/json\" },\n  })\n    .then((res) => {\n      if (res.ok) {\n        return res.json()\n      } else if (res.status == 401) {\n        throw new Error('Invalid Access Token')\n      } else if (res.status == 455) {\n        throw new Error('Employee ID Already Taken')\n      } else {\n        throw new Error('Email Already Taken');\n      }\n\n    })\n    .then(({ token }) => tokenService.setToken(token));\n}\n\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n\nfunction logout() {\n  tokenService.removeToken();\n}\n\nfunction login(creds) {\n  return fetch(BASE_URL + 'login', {\n    method: 'POST',\n    headers: new Headers({ 'Content-Type': 'application/json' }),\n    body: JSON.stringify(creds)\n  })\n    .then(res => {\n      // Valid login if we have a status of 2xx (res.ok)\n      if (res.ok) return res.json();\n      throw new Error('Bad Credentials!');\n    })\n    .then(({ token }) => tokenService.setToken(token));\n}\n\n\nexport default {\n  signup,\n  logout,\n  login,\n  getUser\n};\n\n","import React from 'react';\nimport './ErrorMessage.css'\n\nexport default function ErrorMessage(props) {\n    return (\n        <span className={\"error\"}>{props.error}</span>\n    )\n}","import React, { useState, useEffect } from \"react\";\nimport { Link } from 'react-router-dom'\nimport { Grid, Header, Form, Segment, Button, Icon } from \"semantic-ui-react\";\nimport userService from \"../../utils/userService\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./SignupPage.css\";\nimport validator from 'validator';\nimport ErrorMessage from '../../components/ErrorMessage/ErrorMessage'\n\nexport default function SignUpPage(props) {\n    console.log(props.handleSignUpOrLogin())\n    const history = useHistory();\n    const [error, setError] = useState('')\n    const [formInput, setFormInput] = useState({\n        employeeId: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        email: \"\",\n        accessToken: ''\n    });\n\n    function handleInput(e) {\n        setFormInput({\n            ...formInput,\n            [e.target.name]: e.target.value,\n        });\n    }\n\n\n    function handleValidation() {\n        let formIsValid = true;\n\n        //Employee ID\n\n        if (typeof formInput.employeeId !== \"undefined\") {\n            if (!validator.isNumeric(formInput.employeeId)) {\n                formIsValid = false;\n                setError('ID must be numbers only')\n            }\n        }\n\n        //Email\n\n        if (typeof formInput.email !== \"undefined\") {\n            let lastAtPos = formInput.email.lastIndexOf(\"@\");\n            let lastDotPos = formInput.email.lastIndexOf(\".\");\n\n            if (\n                !(\n                    lastAtPos < lastDotPos &&\n                    lastAtPos > 0 &&\n                    formInput.email.indexOf(\"@@\") == -1 &&\n                    lastDotPos > 2 &&\n                    formInput.email.length - lastDotPos > 2\n                )\n            ) {\n                formIsValid = false;\n                setError('Please enter a vaild email')\n            }\n        }\n        // Password\n        if (typeof formInput.password !== \"undefined\") {\n            if (!validator.isStrongPassword(formInput.password, {\n                minLength: 8,\n                minLowercase: 1,\n                minUppercase: 1,\n                minNumbers: 1,\n                minSymbols: 0,\n                returnScore: false,\n                pointsPerUnique: 1,\n                pointsPerRepeat: 0.5,\n                pointsForContainingLower: 10,\n                pointsForContainingUpper: 10,\n                pointsForContainingNumber: 10,\n                pointsForContainingSymbol: 10\n            })) {\n                formIsValid = false;\n                setError(`Password must be 8 characters\n                and must contain at least 1: uppercase, lowercase, and number`)\n            }\n        }\n\n        //Confirm Password\n        if (typeof formInput.confirmPassword !== \"undefined\") {\n            if (!validator.equals(formInput.confirmPassword, formInput.password)) {\n                formIsValid = false;\n                setError('Passwords do not match')\n            }\n        }\n        return formIsValid;\n    }\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n        if (handleValidation()) {\n            try {\n                await userService.signup(formInput);\n                await props.handleSignUpOrLogin\n                history.push('/profile')\n            } catch (err) {\n                setError(err.message)\n            }\n        }\n    }\n\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            setError(null);\n        }, 3000);\n        return () => clearTimeout(timer);\n    }, [error]);\n\n    return (\n        <>\n            <Grid\n                textAlign=\"center\"\n                style={{ margin: \"1em\" }}\n                verticalAlign=\"middle\"\n            >\n                <Grid.Column style={{ maxWidth: 700 }} className=\"signupForm\">\n                    <Header as=\"h2\" color=\"blue\" textAlign=\"center\">\n                        <span className=\"signupText\">Register </span>\n                        <i>\n                            <u>\n                                <Link to='/login' style={{ color: 'black' }}>\n                                    <span className='loginText'>Login</span>\n                                    <span className='loginTextIcon'><Icon id='loginIcon' className='long arrow alternate right' /></span>\n                                </Link>\n                            </u>\n                        </i>\n                    </Header>\n\n                    <br />\n                    <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n                        <label className='formLabel'>Employee ID </label>\n                        <Form.Input\n                            name=\"employeeId\"\n                            placeholder=\"Employee ID\"\n                            value={formInput.employeeId}\n                            onChange={handleInput}\n                            required\n                        />\n                        <label className='formLabel'>Company Email</label>\n                        <Form.Input\n                            type=\"email\"\n                            name=\"email\"\n                            placeholder=\"Email\"\n                            value={formInput.email}\n                            onChange={handleInput}\n                            required\n                        />\n                        <br />\n                        <label className='formLabel'>Access Token</label>\n                        <Form.Input\n                            type=\"accessToken\"\n                            name=\"accessToken\"\n                            placeholder=\"Access Token\"\n                            value={formInput.accessToken}\n                            onChange={handleInput}\n                            required\n                        />\n                        <br />\n                        <label className='formLabel'>Password <br /> <span style={{ fontSize: '8px' }}>must contain at least 1: uppercase, lowercase, number</span></label>\n                        <Form.Input\n                            name=\"password\"\n                            type=\"password\"\n                            placeholder=\"Password\"\n                            value={formInput.password}\n                            onChange={handleInput}\n                            required\n                        />\n                        <Form.Input\n                            name=\"confirmPassword\"\n                            type=\"password\"\n                            placeholder=\"Confirm Password\"\n                            value={formInput.confirmPassword}\n                            onChange={handleInput}\n                            required\n                        />\n\n                        <ErrorMessage error={error} />\n                        <br />\n                        <Button type=\"submit\" className=\"btn\" id=\"signupButton\">\n                            Register\n                        </Button>\n                    </Form>\n                </Grid.Column>\n            </Grid>\n        </>\n    );\n}\n","import React from \"react\";\n\n\n\n\nexport default function HeaderImage() {\n\n    return (\n        <img\n            src={process.env.PUBLIC_URL + '/navbarImage.png'}\n            alt='doctor healthcare image'\n            style={{ width: '100vw' }} />\n    )\n}","import React, { useState, useEffect } from \"react\";\nimport { Link } from 'react-router-dom'\nimport { useHistory } from \"react-router-dom\";\nimport \"./LoginPage.css\";\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\nimport userService from \"../../utils/userService\";\nimport {\n    Grid,\n    Form,\n    Header,\n    Button,\n    Icon,\n} from \"semantic-ui-react\";\nimport HeaderImage from \"../../components/MOLECULES/HeaderImage\";\n\nexport default function LoginPage(props) {\n    const history = useHistory();\n    const [error, setError] = useState(\"\");\n    const [formInput, setFormInput] = useState({\n        password: \"\",\n        email: \"\",\n    });\n    function handleInput(e) {\n        setFormInput({\n            ...formInput,\n            [e.target.name]: e.target.value,\n        });\n    }\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n\n        try {\n            await userService.login(formInput);\n            props.handleSignUpOrLogin();\n            history.push(\"/index\");\n        } catch (err) {\n            setError(err.message);\n        }\n    }\n\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            setError(null);\n        }, 3000);\n        return () => clearTimeout(timer);\n    }, [error]);\n\n    return (\n        <>\n            <Grid\n                textAlign=\"center\"\n                style={{ margin: \"1em\" }}\n                verticalAlign=\"middle\"\n            >\n                <Grid.Column style={{ maxWidth: 450 }}>\n                    <Header as=\"h2\" color=\"blue\" textAlign=\"center\">\n                        <span className=\"signupText\">Login </span>\n                        <i>\n                            <Link to='/register' style={{ color: 'black' }}>\n                                <span className='loginText'>or <u>Register</u></span>\n                                <span className='loginTextIcon'><Icon id='loginIcon' className='long arrow alternate right' /></span>\n                            </Link>\n                        </i>\n                    </Header>\n                    <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n                        <label className='formLabel'>Email</label>\n                        <Form.Input\n                            type=\"email\"\n                            name=\"email\"\n                            placeholder=\"email\"\n                            value={formInput.email}\n                            onChange={handleInput}\n                            required\n                        />\n                        <label className='formLabel'>Password</label>\n                        <Form.Input\n                            name=\"password\"\n                            type=\"password\"\n                            placeholder=\"password\"\n                            value={formInput.password}\n                            onChange={handleInput}\n                            required\n                        />\n                        <Button type=\"submit\" className=\"btn\" id=\"signupButton\">\n                            Login\n                        </Button>\n                    </Form>\n\n                    {error ? <ErrorMessage error={error} /> : null}\n                </Grid.Column>\n            </Grid>\n        </>\n    );\n}\n","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\n// import './Navbar.css'\nimport onClickOutside from \"react-onclickoutside\";\n\nfunction Dropdown({ setShow, handleLogout }) {\n    Dropdown.handleClickOutside = () => setShow(false);\n\n    function closeDropdown() {\n        setShow(false)\n    }\n\n\n\n    return (\n        <div id='dropdown'>\n            <Link id='addClientButton' className='dropdownItem' to='/addclient' onClick={closeDropdown}>Add Client</Link>\n            <Link id='addClientButton' className='dropdownItem' to='/addtrial' onClick={closeDropdown}>Add Trial</Link>\n            <Link id='addClientButton' className='dropdownItem' to='/find' onClick={closeDropdown}>Client per Trial</Link>\n\n            <Link id='logoutButton' className='dropdownItem' to='/index' onClick={handleLogout}>Logout</Link>\n        </div>\n\n    )\n}\nconst clickOutsideConfig = {\n    handleClickOutside: () => Dropdown.handleClickOutside\n}\nexport default onClickOutside(Dropdown, clickOutsideConfig)","import React from \"react\";\n\n\n\n\nexport default function HeaderImage() {\n\n    return (\n        <img\n            src={process.env.PUBLIC_URL + '/landingHeader.png'}\n            alt='doctor healthcare image'\n            style={{ width: '100vw' }} />\n    )\n}","import React, { useEffect, useState } from 'react'\nimport './Wallet.css'\nimport { Segment, Message, Button } from 'semantic-ui-react'\n\nexport default function Wallet({ wallet, connect }) {\n\n    const ethereum = window.ethereum\n\n\n    async function test() {\n        const data = await ethereum.requestPermissions\n        console.log(data)\n    }\n\n    if (wallet) {\n        return (\n            <div id='walletMessage' style={{\n                height: 'fit-content',\n                color: 'red',\n                position: 'absolute',\n                left: '45%'\n            }}>\n                <Button onClick={test} style={{ textAlign: 'left', fontSize: '1em', padding: '.5em 1em', position: 'relative', top: '.5em', backgroundColor: '#00000020' }}>\n                    Connected\n                    <img src={process.env.PUBLIC_URL + 'metamask.png'} style={{ height: '2vh', position: 'relative', top: '.18em', left: '.3em' }} alt='MetaMask Icon' />\n\n                </Button>\n            </div>\n        )\n    } else {\n        return (\n            <div id='walletMessage' style={{\n                height: 'fit-content',\n                color: 'red',\n                position: 'absolute',\n                left: '45%'\n            }}>\n                <Button onClick={connect} style={{ textAlign: 'left', fontSize: '1em', padding: '.5em 1em', position: 'relative', top: '.5em', backgroundColor: '#00000020' }}>\n                    Connect Wallet\n                    <img src={process.env.PUBLIC_URL + 'metamask.png'} style={{ height: '2vh', position: 'relative', top: '.18em', left: '.3em' }} alt='MetaMask Icon' />\n\n                </Button>\n            </div>\n        )\n    }\n\n}","import React, { useState, useRef, useEffect } from 'react'\nimport { Icon } from 'semantic-ui-react'\nimport { Link, useLocation } from 'react-router-dom'\nimport './Navbar.css'\nimport Dropdown from './Dropdown/Dropdown'\nimport HeaderImage from '../MOLECULES/HeaderImage'\nimport WelcomeHeader from '../MOLECULES/WelcomeHeader'\nimport Wallet from '../Wallet/Wallet.jsx'\n\nexport default function Navbar({ wallet, user, handleLogout, setShow, show, connect }) {\n    const location = useLocation()\n    const [hover, setHover] = useState(false)\n    // Navbar.handleClickOutside = () => setShow(false);\n\n\n\n    function handleHover(e) {\n        e.preventDefault()\n        setHover(!hover)\n    }\n    function handleDropdown(e) {\n        e.preventDefault()\n        setShow(true)\n    }\n\n    function closeDropdown() {\n        setShow(false)\n    }\n\n    return (\n        <>\n            <div id='navCont'>\n                <Link to='/index' id='homeNavButton' onClick={closeDropdown}>Home</Link>\n                <Wallet wallet={wallet} connect={connect} />\n                {user ?\n                    (\n                        <><div id='dropdownCont' style={hover ? { color: 'blue' } : { color: 'black' }} onMouseOver={handleHover} onMouseOut={handleHover} onClick={handleDropdown}>\n                            <Icon id='profileIcon' size='large' className='user outline'></Icon>\n                            <Icon id='downArrowIcon' size='small' className='setting'></Icon>\n                        </div>\n                            {show ?\n                                (\n                                    <Dropdown setShow={setShow} handleLogout={handleLogout} />\n                                ) : null}\n                        </>)\n                    :\n                    (<Link to='/login' id='loggedUserNavButton' onClick={handleLogout}>Login/Register</Link>)\n                }\n            </div >\n            {location.pathname == '/index' ?\n                <WelcomeHeader />\n                :\n                <HeaderImage />\n            }\n        </>\n    )\n}","import React from 'react';\nimport './SuccessMessage.css'\n\nexport default function SuccessMessage(props) {\n    return (\n        <span style={{ color: 'green' }} className={\"error\"}>{props.success}</span>\n    )\n}","import tokenService from './tokenService';\n\nconst BASE_URL = '/api/clients/';\n\nasync function addClient(data) {\n    return fetch(BASE_URL + 'addclient', {\n        method: \"POST\",\n        body: JSON.stringify(data),\n        headers: {\n            \"Content-type\": \"application/json\",\n            Authorization: \"Bearer \" + tokenService.getToken(),\n        },\n    }).then((res) => {\n        if (res.ok) return res.json();\n        throw new Error(\"Error Adding Client - Possible duplicate wallet address\");\n    });\n}\n\nasync function mintToken(data) {\n    return fetch(BASE_URL + 'minttoken', {\n        method: \"POST\",\n        body: JSON.stringify(data),\n        headers: {\n            \"Content-type\": \"application/json\",\n            Authorization: \"Bearer \" + tokenService.getToken(),\n        },\n    }).then((res) => {\n        if (res.ok) return res.json();\n        throw new Error(\"Error Adding Mint to Local DB, however, Client Token Sent\");\n    });\n}\n\nasync function checkPayment(data) {\n    return fetch(BASE_URL + 'checkpayment', {\n        method: \"POST\",\n        body: JSON.stringify(data),\n        headers: {\n            \"Content-type\": \"application/json\",\n            Authorization: \"Bearer \" + tokenService.getToken(),\n        },\n    }).then((res) => {\n        if (res.ok) return res.json();\n        throw new Error(\"Please Reload\");\n    });\n}\n\nasync function transferFunds(data) {\n    return fetch(BASE_URL + 'transferfunds', {\n        method: \"PUT\",\n        body: JSON.stringify(data),\n        headers: {\n            \"Content-type\": \"application/json\",\n            Authorization: \"Bearer \" + tokenService.getToken(),\n        },\n    }).then((res) => {\n        if (res.ok) return res.json();\n        throw new Error(\"Please Reload\");\n    });\n}\n\nexport default {\n    addClient,\n    mintToken,\n    checkPayment,\n    transferFunds\n};","import tokenService from './tokenService';\n\nconst BASE_URL = '/api/trials/';\n\nasync function addTrial(data) {\n    return fetch(BASE_URL + 'addtrial', {\n        method: \"POST\",\n        body: JSON.stringify(data),\n        headers: {\n            \"Content-type\": \"application/json\",\n            Authorization: \"Bearer \" + tokenService.getToken(),\n        },\n    }).then((res) => {\n        if (res.ok) return res.json();\n        throw new Error(\"Error Adding Trial \");\n    });\n}\n\nasync function getTrials() {\n    return fetch(BASE_URL + 'gettrials', {\n        method: \"GET\",\n        headers: {\n            \"Content-type\": \"application/json\",\n            Authorization: \"Bearer \" + tokenService.getToken(),\n        },\n    }).then((res) => {\n        if (res.ok) return res.json();\n        throw new Error(\"Error Getting Trials\");\n    });\n}\n\nasync function findClients(id) {\n    return fetch(BASE_URL + 'findclients/' + id, {\n        method: \"GET\",\n        headers: {\n            \"Content-type\": \"application/json\",\n            Authorization: \"Bearer \" + tokenService.getToken(),\n        },\n    }).then((res) => {\n        if (res.ok) return res.json();\n        throw new Error(\"Error Getting Client Data\");\n    });\n}\n\n\n\n\nexport default {\n    addTrial,\n    getTrials,\n    findClients\n\n};","// API token for nft.storage. Please sign up and replace this with your own key from https://nft.storage/manage/\nexport const NFT_STORAGE_KEY = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkaWQ6ZXRocjoweDE4NkU1OTlmZmY1MjA4MTZBYTQ1M2Y3OTg1OWQzNDZmQTFmN2VmNTIiLCJpc3MiOiJuZnQtc3RvcmFnZSIsImlhdCI6MTYzNzEwMjA2MDkzMiwibmFtZSI6IkZpcnN0QVBJS2V5In0.mPCR2jq5fCcRdUbKEGXfdxY8I9b3NuAxx9i6Y0EyhCE\";\n\n// Infura project ID. If you're building a real app based on this, please replace with your own from https://infura.io/dashboard/ethereum\n//export const INFURA_ID = \"69f75bb89ba74822b512b464ef1495c9\";\nexport const INFURA_ID = \"d1d3aa69069d49b385d60edb0382effa\";\n\n// Key for Etherscan.io. If you're building a real app based on this, please replace with your own from https://etherscan.io/myapikey\nexport const ETHERSCAN_KEY = \"6EAGC2DEG6PP3M1GP1I86QJPQAUE4ESW1W\";\n\n// BLOCKNATIVE ID FOR Notify.js:\nexport const BLOCKNATIVE_DAPPID = \"0b58206a-f3c0-4701-a62f-73c7243e8c77\";\n\nexport const DEFAULT_CONTRACT_NAME = \"NFTMinter\";\n\nexport const NETWORK = chainId => {\n  for (const n in NETWORKS) {\n    if (NETWORKS[n].chainId === chainId) {\n      return NETWORKS[n];\n    }\n  }\n};\n\nexport const NETWORKS = {\n  localhost: {\n    name: \"localhost\",\n    color: \"#666666\",\n    chainId: 31337,\n    blockExplorer: \"\",\n    rpcUrl: \"http://\" + window.location.hostname + \":8545\",\n  },\n  mainnet: {\n    name: \"mainnet\",\n    color: \"#ff8b9e\",\n    chainId: 1,\n    rpcUrl: `https://mainnet.infura.io/v3/${INFURA_ID}`,\n    blockExplorer: \"https://etherscan.io/\",\n  },\n  kovan: {\n    name: \"kovan\",\n    color: \"#7003DD\",\n    chainId: 42,\n    rpcUrl: `https://kovan.infura.io/v3/${INFURA_ID}`,\n    blockExplorer: \"https://kovan.etherscan.io/\",\n    faucet: \"https://gitter.im/kovan-testnet/faucet\", // https://faucet.kovan.network/\n  },\n  rinkeby: {\n    name: \"rinkeby\",\n    color: \"#e0d068\",\n    chainId: 4,\n    rpcUrl: `https://rinkeby.infura.io/v3/${INFURA_ID}`,\n    faucet: \"https://faucet.rinkeby.io/\",\n    blockExplorer: \"https://rinkeby.etherscan.io/\",\n  },\n  ropsten: {\n    name: \"ropsten\",\n    color: \"#F60D09\",\n    chainId: 3,\n    faucet: \"https://faucet.ropsten.be/\",\n    blockExplorer: \"https://ropsten.etherscan.io/\",\n    rpcUrl: `https://ropsten.infura.io/v3/${INFURA_ID}`,\n  },\n  goerli: {\n    name: \"goerli\",\n    color: \"#0975F6\",\n    chainId: 5,\n    faucet: \"https://goerli-faucet.slock.it/\",\n    blockExplorer: \"https://goerli.etherscan.io/\",\n    rpcUrl: `https://goerli.infura.io/v3/${INFURA_ID}`,\n  },\n  xdai: {\n    name: \"xdai\",\n    color: \"#48a9a6\",\n    chainId: 100,\n    price: 1,\n    gasPrice: 1000000000,\n    rpcUrl: \"https://dai.poa.network\",\n    faucet: \"https://xdai-faucet.top/\",\n    blockExplorer: \"https://blockscout.com/poa/xdai/\",\n  },\n  matic: {\n    name: \"matic\",\n    color: \"#2bbdf7\",\n    chainId: 137,\n    price: 1,\n    gasPrice: 1000000000,\n    rpcUrl: \"https://rpc-mainnet.maticvigil.com\",\n    faucet: \"https://faucet.matic.network/\",\n    blockExplorer: \"https://explorer-mainnet.maticvigil.com//\",\n  },\n  mumbai: {\n    name: \"mumbai\",\n    color: \"#92D9FA\",\n    chainId: 80001,\n    price: 1,\n    gasPrice: 1000000000,\n    rpcUrl: \"https://rpc-mumbai.maticvigil.com\",\n    faucet: \"https://faucet.matic.network/\",\n    blockExplorer: \"https://mumbai-explorer.matic.today/\",\n  },\n};\n","import { hexlify } from \"@ethersproject/bytes\";\nimport { parseUnits } from \"@ethersproject/units\";\nimport { notification } from \"antd\";\nimport Notify from \"bnc-notify\";\nimport { BLOCKNATIVE_DAPPID } from \"../constants\";\nimport { ethers } from 'ethers';\n\n// this should probably just be renamed to \"notifier\"\n// it is basically just a wrapper around BlockNative's wonderful Notify.js\n// https://docs.blocknative.com/notify\n\nexport default function Transactor(provider, gasPrice, signer, network, etherscan) {\n\n  // let gasPrice = ethers.BigNumber.from(GasPrice);\n\n  if (typeof provider !== \"undefined\") {\n    // eslint-disable-next-line consistent-return\n    return async tx => {\n      const txSigner = await signer;\n      const txNetwork = network;\n\n      const options = {\n        dappId: BLOCKNATIVE_DAPPID, // GET YOUR OWN KEY AT https://account.blocknative.com\n        system: \"ethereum\",\n        networkId: txNetwork.chainId,\n        // darkMode: Boolean, // (default: false)\n        transactionHandler: txInformation => {\n          console.log(\"HANDLE TX\", txInformation);\n        },\n      };\n      const notify = Notify(options);\n\n      let etherscanNetwork = \"\";\n      if (txNetwork.name && txNetwork.chainId > 1) {\n        etherscanNetwork = txNetwork.name + \".\";\n      }\n\n      let etherscanTxUrl = \"https://\" + etherscanNetwork + \"etherscan.io/tx/\";\n      if (txNetwork.chainId === 100) {\n        etherscanTxUrl = \"https://blockscout.com/poa/xdai/tx/\";\n      }\n\n      try {\n        let result;\n        console.log(tx);\n        if (tx instanceof Promise) {\n          console.log(\"AWAITING TX\", tx);\n          result = await tx;\n        } else {\n          if (!tx.gasPrice) {\n            tx.gasPrice = gasPrice || parseUnits(\"4.1\", \"gwei\");\n          }\n          if (!tx.gasLimit) {\n            tx.gasLimit = hexlify(120000);\n          }\n          console.log(\"RUNNING TX\", tx);\n          result = await txSigner.sendTransaction(tx);\n        }\n        console.log(\"RESULT:\", result);\n        // console.log(\"Notify\", notify);\n\n        // if it is a valid Notify.js network, use that, if not, just send a default notification\n        if ([1, 3, 4, 5, 42, 100].indexOf(txNetwork.chainId) >= 0) {\n          const { emitter } = notify.hash(result.hash);\n          emitter.on(\"all\", transaction => {\n            return {\n              onclick: () => window.open((etherscan || etherscanTxUrl) + transaction.hash),\n            };\n          });\n        } else {\n          notification.info({\n            message: \"Local Transaction Sent\",\n            description: result.hash,\n            placement: \"bottomRight\",\n          });\n        }\n\n        return result;\n      } catch (e) {\n        console.log(e);\n        console.log(\"Transaction Error:\", e.message);\n        notification.error({\n          message: \"Transaction Error\",\n          description: e.message,\n        });\n      }\n    };\n  }\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Grid, Header, Form, Button, Checkbox, Input, Loader } from 'semantic-ui-react'\nimport './AddClient.css'\nimport ErrorMessage from '../../components/ErrorMessage/ErrorMessage'\nimport SuccessMessage from '../../components/SuccessMessage/SuccessMessage'\nimport clientService from '../../utils/clientService'\nimport { Slider } from '@mui/material'\nimport trialsService from \"../../utils/trialsService\";\nimport { ethers } from \"ethers\";\nimport { NFTStorage, File } from 'nft.storage';\nimport Transactor from '../../Solidity/helpers/Transactors';\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport variableTest from '../../Solidity/helpers/test'\n\nexport default function AddClient() {\n\n    const [status, setStatus] = useState();\n    const [getNetworkStatus, setGetNetworkStatus] = useState();\n\n    const abi = [\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"string\",\n                    \"name\": \"tokenName\",\n                    \"type\": \"string\"\n                },\n                {\n                    \"internalType\": \"string\",\n                    \"name\": \"symbol\",\n                    \"type\": \"string\"\n                }\n            ],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"constructor\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"owner\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"approved\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"tokenId\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"Approval\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"owner\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"operator\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"bool\",\n                    \"name\": \"approved\",\n                    \"type\": \"bool\"\n                }\n            ],\n            \"name\": \"ApprovalForAll\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"from\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"tokenId\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"Transfer\",\n            \"type\": \"event\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"tokenId\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"approve\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"owner\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"balanceOf\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"baseURI\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"string\",\n                    \"name\": \"\",\n                    \"type\": \"string\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"tokenId\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"getApproved\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"owner\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"operator\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"isApprovedForAll\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bool\",\n                    \"name\": \"\",\n                    \"type\": \"bool\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"owner\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"string\",\n                    \"name\": \"metadataURI\",\n                    \"type\": \"string\"\n                }\n            ],\n            \"name\": \"mintToken\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"name\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"string\",\n                    \"name\": \"\",\n                    \"type\": \"string\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"tokenId\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"ownerOf\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"from\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"tokenId\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"safeTransferFrom\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"from\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"tokenId\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"_data\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"safeTransferFrom\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"operator\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"bool\",\n                    \"name\": \"approved\",\n                    \"type\": \"bool\"\n                }\n            ],\n            \"name\": \"setApprovalForAll\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes4\",\n                    \"name\": \"interfaceId\",\n                    \"type\": \"bytes4\"\n                }\n            ],\n            \"name\": \"supportsInterface\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bool\",\n                    \"name\": \"\",\n                    \"type\": \"bool\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"symbol\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"string\",\n                    \"name\": \"\",\n                    \"type\": \"string\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"index\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"tokenByIndex\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"owner\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"index\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"tokenOfOwnerByIndex\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"tokenId\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"tokenURI\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"string\",\n                    \"name\": \"\",\n                    \"type\": \"string\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"totalSupply\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"from\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"tokenId\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"transferFrom\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        }\n    ]\n\n\n    const provider = new ethers.providers.Web3Provider(window.ethereum, 'any');\n    const signer = provider.getSigner();\n\n    async function getNetworkAddy() {\n        return await provider.getNetwork()\n    }\n    getNetworkAddy().then((res) => { if (!getNetworkStatus) { setGetNetworkStatus(res) } })\n    console.log(getNetworkStatus)\n\n    const contractAddress = \"0xA398d48Dc96A12dB2bB36CdbaA743E0c0366d859\";\n\n    const contract = new ethers.Contract(contractAddress, abi, signer);\n    const imageLocal = fetch(process.env.PUBLIC_URL + 'CliNFT.jpg').then(async (res) => {\n        return await res.blob()\n    });\n\n    async function mintNFT({ ownerAddress }) {\n\n        const apiKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkaWQ6ZXRocjoweDE4NkU1OTlmZmY1MjA4MTZBYTQ1M2Y3OTg1OWQzNDZmQTFmN2VmNTIiLCJpc3MiOiJuZnQtc3RvcmFnZSIsImlhdCI6MTYzNzEwMjA2MDkzMiwibmFtZSI6IkZpcnN0QVBJS2V5In0.mPCR2jq5fCcRdUbKEGXfdxY8I9b3NuAxx9i6Y0EyhCE'\n        const client = new NFTStorage({ token: apiKey })\n        const metadata = await client.store({\n            name: 'CliNFT',\n            description: `Trial ID: ${formInput.trialIdentification} Participation Percentage: ${formInput.percentageParticipated} `,\n            image: new File(\n                [await imageLocal],\n                'CliNFT Image',\n                { type: 'image/jpg' }\n            ),\n        })\n        const provider = await new ethers.providers.Web3Provider(window.ethereum, 'any');\n        const gasPrice = await provider.getGasPrice()._hex;\n\n\n        // the returned metadata.url has the IPFS URI we want to add.\n        // our smart contract already prefixes URIs with \"ipfs://\", so we remove it before calling the `mintToken` function\n        const metadataURI = metadata.url.replace(/^ipfs:\\/\\//, \"\");\n\n        // scaffold-eth's Transactor helper gives us a nice UI popup when a transaction is sent\n\n        // variableTest(provider, getNetworkStatus);\n\n        console.log(formInput.walletAddress);\n\n        const transactor = Transactor(provider, gasPrice, signer, getNetworkStatus);\n        console.log(await transactor);\n        const tx = await transactor(contract.mintToken(formInput.walletAddress, metadataURI));\n\n        setStatus(\"Blockchain transaction sent, waiting confirmation...\");\n\n        // Wait for the transaction to be confirmed, then get the token ID out of the emitted Transfer event.\n        console.log(await tx);\n        const receipt = await tx.wait();\n        let tokenId = null;\n        for (const event of receipt.events) {\n            if (event.event !== 'Transfer') {\n                continue\n            }\n            tokenId = event.args.tokenId.toString();\n            break;\n        }\n        setStatus(`Minted token #${tokenId}`);\n        try {\n            const data = await clientService.mintToken({ url: metadata.url, wallet: formInput.walletAddress })\n            setSuccess(data.msg)\n        } catch (err) {\n            setError(err.message)\n        }\n        return tokenId;\n    }\n\n    const [error, setError] = useState()\n    const [trials, setTrials] = useState()\n    const [loading, setLoading] = useState(true)\n    const [success, setSuccess] = useState()\n    const [name, setName] = useState(true)\n    const [formInput, setFormInput] = useState({\n        name: '',\n        walletAddress: '',\n        percentageParticipated: 50,\n        trialIdentification: ''\n    })\n\n\n    const handleSlider = (e, value) => setFormInput({ ...formInput, ['percentageParticipated']: value });\n    const handleSelect = (e, { value }) => setFormInput({ ...formInput, ['trialIdentification']: value });\n\n    function handleInput(e) {\n\n        setFormInput({\n            ...formInput,\n            [e.target.name]: e.target.value,\n        });\n    }\n    async function handleValidation() {\n        let formIsValid = true;\n        if (!formInput.trialIdentification || formInput.trialIdentification == '') {\n            formIsValid = false\n            setError('Select a trial')\n        }\n        if (name == true && formInput.name.length < 4) {\n            formIsValid = false\n            setError('Check input of name')\n        }\n        if (formInput.walletAddress) {\n\n            try {\n                const data = await ethers.utils.getAddress(formInput.walletAddress)\n                setSuccess(data.msg)\n\n            } catch (err) {\n\n                formIsValid = false\n                if (err.argument) {\n                    setError('Invalid Wallet Address')\n                } else {\n                    setError(err.argument + ' has returned the following error: ' + err.code)\n                }\n\n            }\n        }\n        return formIsValid;\n    }\n\n    async function handleSubmit() {\n        if (await handleValidation() === true) {\n            try {\n                if (name == false) {\n                    const data = await clientService.addClient({\n                        percentageParticipated: formInput.percentageParticipated,\n                        walletAddress: formInput.walletAddress,\n                        trialIdentification: formInput.trialIdentification,\n                        name: 'Anonymous'\n                    })\n                    mintNFT(formInput.walletAddress);\n                    setSuccess(data.msg)\n                } else {\n                    const data = await clientService.addClient(formInput)\n                    mintNFT(formInput.walletAddress);\n                    setSuccess(data.msg)\n                }\n            } catch (err) {\n                setError(err.message)\n            }\n        }\n    }\n\n    function toggleName() {\n        setName(!name)\n    }\n\n    useEffect(() => {\n        async function getTrials() {\n            setLoading(true)\n            let data = await trialsService.getTrials()\n            await setTrials(data.trials)\n            setLoading(false)\n        }\n        getTrials();\n    }, []);\n\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            setError(null);\n        }, 3000);\n        return () => clearTimeout(timer);\n    }, [error]);\n\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            setSuccess(null);\n        }, 3000);\n        return () => clearTimeout(timer);\n    }, [success]);\n\n    if (loading) {\n        return (\n            <Grid\n                textAlign=\"center\"\n                style={{ height: \"100vh\" }, { margin: '10em' }}\n                verticalAlign=\"middle\"\n            >\n                <Grid.Column style={{ maxWidth: 450 }}>\n                    <Loader size=\"large\" active>\n                        Loading\n                    </Loader>\n                </Grid.Column>\n            </Grid>\n        );\n    } else {\n\n        return (\n            <>\n                <Grid\n                    textAlign=\"center\"\n                    style={{ margin: \"1em\", marginBottom: '10em' }}\n                    verticalAlign=\"middle\"\n                >\n                    <Grid.Column style={{ maxWidth: 425 }}>\n                        <Header as=\"h2\" color=\"blue\" textAlign=\"center\">\n                            <span className=\"signupText\">Add Client Form</span>\n                        </Header><br />\n\n\n                        <Form autoComplete=\"off\">\n                            <div id='inputCont'>\n                                <label id='nameLabelClient' className='formLabel' style={name ? { color: 'black' } : { color: 'lightgray' }}>Name</label>\n                                <div id='checkboxCont'>\n                                    <label id='checkboxLabel' style={{ fontSize: '10px', marginRight: '-1em' }}> <i>Client Prefers to be Anonymous: </i></label>\n                                    <div id='boxCont' style={{ backgroundColor: '#00000030', padding: '0em .15em 0em .0em', borderRadius: '3px', height: '1.3em' }}>\n                                        <Checkbox id='checkBoxClient' onClick={toggleName} />\n                                    </div>\n                                </div>\n                            </div>\n                            <Form.Field>\n\n                                <Input\n                                    type=\"text\"\n                                    name=\"name\"\n                                    placeholder=\"Name of Client or Select Anon.\"\n                                    value={formInput.name}\n                                    onChange={handleInput}\n                                    disabled={name ? false : true}\n                                />\n                            </Form.Field>\n\n\n                            <label className='formLabel'>Wallet Address</label>\n                            <Form.Input\n                                name=\"walletAddress\"\n                                placeholder=\"Wallet Address\"\n                                value={formInput.walletAddress}\n                                onChange={handleInput}\n                                required\n                            />\n                            <br />\n\n\n                            <label className='formLabel'>Trial Identification</label>\n                            <Form.Select\n                                placeholder='Select Associated Trial'\n                                options={\n                                    trials.map(trial => {\n                                        return {\n                                            key: trial.name,\n                                            value: trial._id,\n                                            text: trial.name\n                                        }\n                                    })\n                                }\n                                onChange={handleSelect}\n                                required />\n                            <br />\n\n\n                            <label className='formLabel'>Percentage Completed</label><br />\n                            <Slider\n                                size='small'\n                                defaultValue={50}\n                                step={5}\n                                marks\n                                min={0}\n                                max={100}\n                                onChange={handleSlider}\n                                valueLabelDisplay='auto'\n                                style={{ color: 'rosybrown' }}\n                                color='secondary'\n                            />\n                            <br /><br />\n\n\n                            <Button onClick={handleSubmit} type=\"submit\" className=\"btn\" id=\"signupButton\">\n                                Submit\n                            </Button>\n\n                        </Form>\n\n                        {error ? <ErrorMessage error={error} /> : null}\n                        {success ? <SuccessMessage success={success} /> : null}\n                    </Grid.Column>\n                </Grid>\n                <div style={{ visibility: 'hidden' }}> p </div>\n            </>\n        );\n    }\n}","import React, { useState, useEffect } from \"react\";\nimport { Grid, Header, Form, Button, Input } from 'semantic-ui-react'\nimport './AddTrial.css'\nimport ErrorMessage from '../../components/ErrorMessage/ErrorMessage'\nimport SuccessMessage from '../../components/SuccessMessage/SuccessMessage'\nimport trialsService from \"../../utils/trialsService\";\nimport { ethers } from 'ethers'\n\n\nexport default function AddTrial() {\n\n\n    const provider = new ethers.providers.Web3Provider(window.ethereum, 'any');\n    provider.getGasPrice().then((res) => { console.log(res) })\n\n    const [error, setError] = useState()\n    const [success, setSuccess] = useState()\n    const [formInput, setFormInput] = useState({\n        name: '',\n    })\n\n\n    function handleInput(e) {\n\n        setFormInput({\n            ...formInput,\n            [e.target.name]: e.target.value,\n        });\n    }\n\n    function handleValidation() {\n        let formIsValid = true;\n        if (formInput.trialIdentification == '' || formInput.trialIdentification == 'undefined') {\n            formIsValid = false\n            setError('Select a trial')\n        }\n        return formIsValid;\n    }\n\n\n    async function handleSubmit() {\n        if (handleValidation()) {\n            try {\n                const data = await trialsService.addTrial(formInput)\n                setSuccess(data.msg)\n            } catch (err) {\n                setError(err.message)\n            }\n        }\n    }\n\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            setError(null);\n        }, 3000);\n        return () => clearTimeout(timer);\n    }, [error]);\n\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            setSuccess(null);\n        }, 3000);\n        return () => clearTimeout(timer);\n    }, [success]);\n\n    return (\n        <>\n\n            <Grid\n                textAlign=\"center\"\n                style={{ margin: \"1em\" }}\n                verticalAlign=\"middle\"\n            >\n                <Grid.Column style={{ maxWidth: 425 }}>\n                    <Header as=\"h2\" color=\"blue\" textAlign=\"center\">\n                        <span className=\"signupText\">Add Trial</span>\n                    </Header><br />\n\n\n                    <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n                        <label id='nameLabelClient' className='formLabel' >Name Of Trial</label>\n                        <Form.Field>\n                            <Input\n                                type=\"text\"\n                                name=\"name\"\n                                placeholder=\"Name of Trial\"\n                                value={formInput.name}\n                                onChange={handleInput}\n                            />\n                        </Form.Field>\n\n                        <Button type=\"submit\" className=\"btn\" id=\"signupButton\">\n                            Submit\n                        </Button>\n\n                    </Form>\n\n                    {error ? <ErrorMessage error={error} /> : null}\n                    {success ? <SuccessMessage success={success} /> : null}\n                </Grid.Column>\n            </Grid>\n        </>\n    );\n}","import React, { useState, useEffect } from 'react'\nimport './SendEthButton.css'\nimport { Button, Icon } from 'semantic-ui-react'\nimport clientService from '../../../utils/clientService'\nimport { ethers } from 'ethers';\nimport TransactorSend from '../../../Solidity/helpers/TransactorsSend';\nimport detectEthereumProvider from '@metamask/detect-provider';\n\nexport default function SendEthButton({ client, amount, setSuccess }) {\n    const [disabled, setDisabled] = useState(false);\n    const [getNetworkStatus, setGetNetworkStatus] = useState();\n    const [newGasPrice, setNewGasPrice] = useState();\n    const [senderAddress, setSenderAddress] = useState();\n    const [transactionCount, setTransactionCount] = useState();\n    const [nonce, setNonce] = useState();\n\n    const provider = new ethers.providers.Web3Provider(window.ethereum, 'any');\n    provider.getGasPrice().then((res) => { if (!newGasPrice) { setNewGasPrice(res) } })\n\n    async function getNetworkAddy() {\n        return await provider.getNetwork()\n    }\n    getNetworkAddy().then((res) => { if (!getNetworkStatus) { setGetNetworkStatus(res) } })\n\n    async function checkPaymentStatus() {\n        const data = await clientService.checkPayment(client)\n        if (data.paid) {\n            await setDisabled(true)\n        } else {\n            await setDisabled(false)\n        }\n    }\n\n    useEffect(() => {\n        checkPaymentStatus()\n    }, [])\n\n    async function sendHandler() {\n        sendEth();\n    }\n\n    window.ethereum.request({ method: 'eth_accounts' }).then((res) => { if (!senderAddress) { setSenderAddress(res) } });\n\n\n    async function sendEth() {\n        const signer = provider.getSigner();\n        console.log(senderAddress);\n        console.log(client.walletAddress);\n        const tx = {\n            from: senderAddress[0],\n            to: client.walletAddress,\n            value: ethers.utils.parseEther(amount.toString()),\n            nonce: nonce,\n            gasLimit: \"0x100000\",\n            gasPrice: ethers.utils.hexlify(newGasPrice._hex.toString()),\n        }\n        console.log(tx);\n        try {\n            await signer.sendTransaction(tx).then((transaction) => {\n                console.log(transaction)\n            })\n            await clientService.transferFunds(client)\n            await checkPaymentStatus()\n        } catch (error) {\n            alert('failed to send')\n        }\n    }\n\n    return (\n        <>\n            <Button size='tiny' disabled={disabled} onClick={sendHandler}>{!disabled ? 'Send' : 'Sent'}</Button>\n            {disabled ?\n                <Icon className='circle' color='green' size='tiny' style={{ position: 'absolute', marginTop: '2em' }} />\n                : ''}\n        </>\n    )\n}","import React, { useState, useEffect } from 'react'\nimport './TrialsFind.css'\nimport { Form, Grid, Loader, Table, Button, Input } from 'semantic-ui-react'\nimport trialsService from '../../../utils/trialsService'\nimport ErrorMessage from '../../ErrorMessage/ErrorMessage'\nimport validator from 'validator';\nimport SendEthButton from '../../MOLECULES/SendEthButton/SendEthButton'\n\n\nexport default function TrialsFind(props) {\n    const [loading, setLoading] = useState(false)\n    const [showEth, setShowEth] = useState(false)\n    const [show, setShow] = useState(true)\n    const [errorEth, setErrorEth] = useState()\n    const [error, setError] = useState()\n    const [payment, setPayment] = useState(false)\n    const [perClient, setPerClient] = useState()\n    const [input, setInput] = useState({\n        ethInput: ''\n    })\n    const [compile, setCompile] = useState(false)\n    const [currentTrial, setCurrentTrial] = useState()\n    const [formInput, setFormInput] = useState({\n        trial: ''\n    })\n    const [clients, setClients] = useState()\n\n\n    function handleSelect(e, { value }) {\n        setFormInput({ ...formInput, ['trial']: value })\n        setCurrentTrial(value)\n    }\n\n    function toggle(e) {\n        e.preventDefault()\n        setShow(true)\n    }\n\n    async function backendPayload(arr, trial) {\n        let payload = { trialId: trial, participants: arr }\n        console.log(payload)\n    }\n\n    function resetHandler() {\n        setCompile(false)\n        setShowEth(false)\n        setInput({ ethInput: '' })\n        setPayment(false)\n    }\n\n\n    function percentByTrial(client) {\n        let trials = client.trials\n        for (let i = 0; i < trials.length; i++) {\n            if (trials[i].trialIdentification === formInput.trial) {\n                return trials[i].percentageCompleted\n            } else {\n                console.log(false)\n            }\n        }\n    }\n\n    async function selectHandler(e) {\n        e.preventDefault()\n        setLoading(true)\n        const data = await trialsService.findClients(formInput.trial)\n        setClients(data.clients)\n        setShow(false)\n        setLoading(false)\n\n    }\n\n    async function getTotals(total) {\n        let clientPayload = [];\n        let sumPercent = 0;\n\n        clients.forEach((client) => {\n            client.trials.forEach((trial, i) => {\n                if (trial.trialIdentification === currentTrial) {\n                    clientPayload.push(trial)\n                }\n            })\n        })\n        clientPayload.forEach((client) => {\n            sumPercent += client.percentageCompleted\n        })\n\n        await setPerClient(total / sumPercent)\n        setCompile(true);\n        setPayment(true)\n    }\n\n\n    function handleInput(e) {\n        setInput({\n            ...input,\n            [e.target.name]: e.target.value,\n        });\n    }\n\n\n    async function handleSubmitEth(e) {\n        e.preventDefault()\n        if (!validator.isNumeric(input.ethInput)) {\n            setErrorEth('Only Numeric Values Allowed')\n        } else {\n            await getTotals(input.ethInput)\n        }\n    }\n\n\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            setError(null);\n        }, 3000);\n        return () => clearTimeout(timer);\n    }, [error]);\n\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            setErrorEth(null);\n        }, 3000);\n        return () => clearTimeout(timer);\n    }, [errorEth]);\n\n    if (loading) {\n        return (\n            <Grid\n                textAlign=\"center\"\n                style={{ height: \"50vh\" }, { margin: '10em' }}\n                verticalAlign=\"middle\"\n            >\n                <Grid.Column style={{ maxWidth: 450 }}>\n                    <Loader size=\"large\" active>\n                        Loading\n                    </Loader>\n                </Grid.Column>\n            </Grid>\n        );\n    } else {\n\n        if (show == true) {\n            return (\n\n                <Form>\n                    <label>Find clients of trial</label>\n                    <br /><br />\n                    <Form.Select\n                        placeholder='Select Associated Trial'\n                        id='TrialFindSelect'\n                        options={\n                            props.trials.map(trial => {\n                                return {\n                                    key: trial.name,\n                                    value: trial._id,\n                                    text: trial.name\n                                }\n                            })\n                        }\n                        onChange={handleSelect}\n                        required={true}\n                    /> <Form.Button id='TrialFindButtonForm' size='mini' onClick={selectHandler}>Search</Form.Button>\n                </Form>\n            )\n        } else if (!show) {\n            if (!showEth) {\n                return (\n                    <>\n                        <Table unstackable celled compact='very'>\n                            <Table.Header>\n                                <Table.Row>\n                                    <Table.HeaderCell width={8}>ETH Wallet Address</Table.HeaderCell>\n                                    <Table.HeaderCell width={1} >% Completed</Table.HeaderCell>\n                                </Table.Row>\n                            </Table.Header>\n\n                            <Table.Body>\n                                {clients.map((client, i) => {\n                                    return (\n                                        <>\n                                            <Table.Row key={i}>\n                                                <Table.Cell key={i, 0} style={{ fontSize: '10px' }}>{client.walletAddress}</Table.Cell>\n                                                <Table.Cell key={i, 1}>{percentByTrial(client)}</Table.Cell>\n                                            </Table.Row>\n                                        </>\n                                    )\n                                })}\n                            </Table.Body>\n                            <Table.Footer></Table.Footer>\n                        </Table>\n                        <Button style={{ marginRight: '2em' }} onClick={toggle}>Select Another Trial</Button>\n                        <Button onClick={() => { setShowEth(true) }}>Convert to ETH</Button>\n                        <ErrorMessage error={error} />\n                    </>\n                )\n            } else {\n                return (\n                    <>\n                        {!payment ?\n                            <>\n                                <Form>\n                                    <Input\n                                        placeholder='Total Amount of ETH'\n                                        name='ethInput'\n                                        value={input.ethInput}\n                                        onChange={handleInput}\n                                        required\n                                    ></Input>\n                                    <Button onClick={handleSubmitEth} style={{ position: 'absolute', right: '2vw', color: 'darkgreen', backgroundColor: 'lightgray' }}>Compile</Button>\n                                </Form>\n                                <br />\n                                <label style={{ color: 'red', fontSize: '10px', marginBottom: '-.05em' }}>{errorEth}</label>\n                                <img src={process.env.PUBLIC_URL + 'ethereum.png'} alt='ETH icon' id='ethIcon' style={{ height: '2em' }} />\n                            </> : ''}\n                        <Table unstackable celled compact='very' style={{ marginTop: '0em' }}>\n                            <Table.Header>\n                                <Table.Row>\n                                    <Table.HeaderCell width={8}>ETH Wallet Address</Table.HeaderCell>\n                                    <Table.HeaderCell width={1} >Eth to Send</Table.HeaderCell>\n                                    {payment ?\n                                        <Table.HeaderCell width={3}>ETH Wallet Address</Table.HeaderCell>\n                                        : ''}\n                                </Table.Row>\n                            </Table.Header>\n                            {!compile ?\n                                <Table.Body>\n                                    {clients.map((client, i) => {\n                                        return (\n                                            <>\n                                                <Table.Row key={client + i}>\n                                                    <Table.Cell key={i, 0} style={{ fontSize: '10px' }}>{client.walletAddress}</Table.Cell>\n                                                    <Table.Cell key={i, 1} style={{ fontSize: 10 }}>Please Compile</Table.Cell>\n                                                </Table.Row>\n                                            </>\n                                        )\n                                    })}\n                                </Table.Body>\n                                :\n                                <Table.Body>\n                                    {clients.map((client, i) => {\n                                        return (\n                                            <>\n                                                <Table.Row key={i + client}>\n                                                    <Table.Cell key={i, 0} style={{ fontSize: '10px' }}>{client.walletAddress}</Table.Cell>\n                                                    <Table.Cell key={i, 1} style={{ fontSize: '10px' }}>{(percentByTrial(client) * perClient).toFixed(6)}</Table.Cell>\n                                                    {payment ?\n                                                        <Table.Cell key={i, 2} style={{ fontSize: 10 }} ><SendEthButton key={i + 'sendEthButon'} client={client} amount={(percentByTrial(client) * perClient)} /></Table.Cell>\n                                                        : ''}\n                                                </Table.Row>\n                                            </>\n                                        )\n                                    })}\n                                </Table.Body>\n                            }\n                            <Table.Footer></Table.Footer>\n                        </Table>\n                        <Button style={{ marginRight: '2em' }} onClick={toggle}>Select Another Trial</Button>\n                        <Button onClick={resetHandler}>Return</Button>\n                        <ErrorMessage error={error} />\n                    </>\n                )\n            }\n        }\n\n    }\n}\n","import React, { useState, useEffect } from 'react'\nimport { Segment, Header, Loader, Grid } from 'semantic-ui-react'\nimport trialsService from '../../utils/trialsService'\nimport './Find.css'\nimport TrialsFind from '../../components/Find/Trials/TrialsFind'\nimport { useHistory } from 'react-router-dom'\n\nexport default function Find(props) {\n    const history = useHistory()\n    const [trials, setTrials] = useState()\n    const [loading, setLoading] = useState(true)\n    const [error, setError] = useState()\n\n    useEffect(() => {\n        async function getTrials() {\n            setLoading(true)\n            let data = await trialsService.getTrials()\n            await setTrials(data.trials)\n            setLoading(false)\n        }\n        getTrials();\n    }, []);\n\n\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            setError(null);\n        }, 3000);\n        return () => clearTimeout(timer);\n    }, [error]);\n\n\n    if (loading) {\n        return (\n            <Grid\n                textAlign=\"center\"\n                style={{ height: \"100vh\" }, { margin: '10em' }}\n                verticalAlign=\"middle\"\n            >\n                <Grid.Column style={{ maxWidth: 450 }}>\n                    <Loader size=\"large\" active>\n                        Loading\n                    </Loader>\n                </Grid.Column>\n            </Grid>\n        );\n    } else {\n        return (\n            <Segment style={{ maxWidth: 450, margin: 'auto', marginTop: '1em', border: 'none' }}>\n                <Header>\n                    Find\n                </Header>\n                <TrialsFind trials={trials} />\n\n            </Segment>\n        )\n    }\n}","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport './Home.css'\nimport { Button, Segment } from 'semantic-ui-react'\n\n\n\n\n\nexport default function Home() {\n\n    return (\n        <>\n            <Segment style={{ maxWidth: 425, margin: 'auto', marginTop: '2em' }}>\n                <h2>Welcome to C.T.S.</h2>\n                <br />\n                <p>C.T.S. is an NFT(Non-fungible Token) minting and payment service designed to\n                    support both manufacturing companies and trial participants alike. </p>\n                <p>\n                    Through this one of a kind DApp (Decentralized Application), Doctors/Clinicians can add their\n                    clients unique Etherium wallet addresses, and issue an NFT for participation\n                    in a particular Clinical Trial.\n                </p>\n                <p>\n                    Participants are minted an NFT based upon their participation in each trial, and\n                    that NFT provides both validity of participation, as well as the amount of the study\n                    they completed.\n                </p>\n                <p>\n                    At the end of a study, should the drug become FDA approved and go to market,\n                    C.T.S. (through smart contracts on the block-chain) will dispurse a percentage of\n                    the total revenue of that medication, and share earnings to those who participated\n                    in the original clinical study, via verification of the previously minted NFT.\n                </p>\n\n            </Segment>\n            <div style={{ marginTop: '1em', marginBottom: '6em' }}>\n                <Link to='/login'><Button style={{ marginRight: '10em' }}>Login</Button></Link>\n                <Link to='register'><Button >Register</Button></Link>\n            </div>\n            &nbsp;\n        </>\n    )\n}","import React, { useState } from 'react';\nimport { Redirect, Route, Switch, useHistory } from 'react-router-dom';\nimport './App.css';\nimport SignupPage from '../SignupPage/SignupPage';\nimport LoginPage from '../LoginPage/LoginPage';\nimport userService from '../../utils/userService'\nimport Navbar from '../../components/Navbar/Navbar'\nimport Footer from '../../components/Footer/Footer';\nimport AddClient from '../AddClient/AddClient';\nimport AddTrial from '../AddTrial/AddTrial';\nimport Find from '../Find/Find';\nimport Home from '../Home/Home';\nimport { ethers } from 'ethers';\nimport detectEthereumProvider from '@metamask/detect-provider';\n\nfunction App() {\n  // MetaMask stuff\n  const ethereum = window.ethereum\n  const [currentWallet, setCurrentWallet] = useState()\n\n  let currentAccount = null;\n  ethereum\n    .request({ method: 'eth_accounts' })\n    .then(handleAccountsChanged)\n    .catch((err) => {\n      // Some unexpected error.\n      // For backwards compatibility reasons, if no accounts are available,\n      // eth_accounts will return an empty array.\n      console.error(err, 'here');\n    });\n\n  function handleAccountsChanged(accounts) {\n    if (accounts.length === 0) {\n      // MetaMask is locked or the user has not connected any accounts\n      console.log('Please connect to MetaMask.');\n    } else if (accounts[0] !== currentAccount) {\n      currentAccount = accounts[0];\n      setCurrentWallet(currentAccount)\n    }\n  }\n\n  function connect() {\n    ethereum\n      .request({ method: 'eth_requestAccounts' })\n      .then(handleAccountsChanged)\n      .catch((err) => {\n        if (err.code === 4001) {\n          // EIP-1193 userRejectedRequest error\n          // If this happens, the user rejected the connection request.\n          console.log('Please connect to MetaMask.');\n        } else {\n          console.error(err);\n        }\n      });\n  }\n  // end MetaMask\n  const history = useHistory()\n  const [show, setShow] = useState(false)\n  const [user, setUser] = useState(userService.getUser()) // getUser decodes our JWT token, into a javascript object\n  // this object corresponds to the jwt payload which is defined in the server signup or login function that looks like \n  // this  const token = createJWT(user); // where user was the document we created from mongo\n\n  function handleSignUpOrLogin() {\n    setUser(userService.getUser()) // getting the user from localstorage decoding the jwt\n  }\n\n  function handleLogout() {\n    userService.logout();\n    setUser({ user: null })\n  }\n\n  return (\n    <div className=\"App\">\n      <Navbar wallet={currentWallet} connect={connect} user={userService.getUser()} handleLogout={handleLogout} setShow={setShow} show={show} />\n      <Switch>\n        {/* {user !== null ? */}\n        <Route exact path=\"/login\">\n          <LoginPage handleSignUpOrLogin={handleSignUpOrLogin} />\n        </Route>\n        <Route exact path=\"/register\">\n          <SignupPage handleSignUpOrLogin={handleSignUpOrLogin} />\n        </Route>\n\n        <Route path=\"/index\">\n          <Home />\n        </Route>\n        {user ?\n          <>\n            <Switch>\n              <Route exact path='/profile'>\n                profile page here!\n              </Route>\n              <Route exact path='/addclient'>\n                <AddClient />\n              </Route>\n              <Route exact path='/addtrial'>\n                <AddTrial />\n              </Route>\n              <Route exact path='/find'>\n                <Find user={user} />\n              </Route>\n            </Switch>\n          </>\n          :\n          <Redirect to='/index' />\n        }\n\n      </Switch>\n    </div >\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.css';\nimport App from './pages/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router><App/></Router>,\n  document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}